class ExploitDbHarvester

  HOST = "www.exploit-db.com"
  ARCHIVE_FILE_PATH = "/archive.tar.bz2"
  EXPLOIT_SHOW_PATH_PATH = "http://www.exploit-db.com/exploits/%s/"
  def harvest
    download_db_archieve
    unarchive_db_archieve

    handler = open("#{CVE_SCRAPER_OUTPUT_DIRECTORY}/files.csv")

    csv_string = handler.read.encode!("UTF-8", "iso-8859-1", invalid: :replace)

    puts CVE_SCRAPER_EXPLOIT_OUTPUT_FILE
    File.open(CVE_SCRAPER_EXPLOIT_OUTPUT_FILE, 'w') do |file|
      CSV.parse(csv_string, headers: true) do |row|
        exploit_db_id = row[0]
        file_location = row[1]
        description = row[2]
        published_date = row[3]
        author = row[4]
        platform = row[5]
        type = row[6]
        port = row[7]

        exploit_url = EXPLOIT_SHOW_PATH_PATH % exploit_db_id
        puts "calling: #{exploit_url}"
        source = Net::HTTP.get(URI.parse(exploit_url))
        doc = Hpricot(source)

        exploit_information_table = doc.search("/html/body/div/table/tr")
        edb_id =  exploit_information_table.search("/td[1]/span/").first.to_plain_text rescue ""
        cve_id = "CVE-#{exploit_information_table.search("/td[2]/a/").first.to_plain_text}" rescue ""
        osvdb_id = exploit_information_table.search("/td[3]/a/").first.to_plain_text rescue ""

        output_line = []
        output_line.push(exploit_db_id, file_location, description, published_date, author, platform, type, port, edb_id, cve_id, osvdb_id)
        file.write(output_line.to_csv)
      end
    end
  end

  private

  def download_db_archieve
    if !File.exist?(CVE_SCRAPER_EXPLOIT_DB_FILE_ARCHIVED)
      puts "downloading..."
      Net::HTTP.start(HOST) do |http|
        resp = http.get(ARCHIVE_FILE_PATH)
        open(CVE_SCRAPER_EXPLOIT_DB_FILE_ARCHIVED, "wb") do |file|
          file.write(resp.body)
        end
      end
    else
      puts "not downloading"
    end
  end

  def unarchive_db_archieve
    if !File.exist?("#{CVE_SCRAPER_OUTPUT_DIRECTORY}/files.csv")
      puts "unarchiing.."
      %x(tar xjvf #{CVE_SCRAPER_EXPLOIT_DB_FILE_ARCHIVED} -C #{CVE_SCRAPER_OUTPUT_DIRECTORY} files.csv)
      %x(chmod -R a+r #{CVE_SCRAPER_OUTPUT_DIRECTORY}/files.csv)
    else
      puts "not unarching"
    end
  end

end
